# Build stage
FROM node:20-alpine AS build
WORKDIR /app

# Copy package.json and lock files first to leverage Docker cache.
# This layer only changes if dependencies change.
COPY frontend/package*.json ./

# Install dependencies - this layer is cached unless package files change.
RUN npm install

# Copy the rest of the application source code.
# This layer changes if any source code changes.
COPY frontend/ .

# Build the frontend application.
RUN npm run build

# Production stage
FROM nginx:stable-alpine AS final
WORKDIR /usr/share/nginx/html

# Copy only the built assets from the build stage.
# This keeps the final image minimal.
COPY --from=build /app/dist .

# Expose port 80.
EXPOSE 80

# Command to run Nginx.
CMD ["nginx", "-g", "daemon off;"]